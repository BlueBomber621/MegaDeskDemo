<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>